{
  "kind" : "Program",
  "location" : [ 1, 1, 10, 106 ],
  "declarations" : [ {
    "kind" : "VarDef",
    "location" : [ 1, 1, 1, 9 ],
    "var" : {
      "kind" : "TypedVar",
      "location" : [ 1, 1, 1, 5 ],
      "identifier" : {
        "kind" : "Identifier",
        "location" : [ 1, 1, 1, 1 ],
        "name" : "x"
      },
      "type" : {
        "kind" : "ClassType",
        "location" : [ 1, 3, 1, 5 ],
        "className" : "int"
      }
    },
    "value" : {
      "kind" : "IntegerLiteral",
      "location" : [ 1, 9, 1, 9 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "value" : 0
    }
  }, {
    "kind" : "VarDef",
    "location" : [ 2, 1, 2, 9 ],
    "var" : {
      "kind" : "TypedVar",
      "location" : [ 2, 1, 2, 5 ],
      "identifier" : {
        "kind" : "Identifier",
        "location" : [ 2, 1, 2, 1 ],
        "name" : "y"
      },
      "type" : {
        "kind" : "ClassType",
        "location" : [ 2, 3, 2, 5 ],
        "className" : "int"
      }
    },
    "value" : {
      "kind" : "IntegerLiteral",
      "location" : [ 2, 9, 2, 9 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "value" : 0
    }
  }, {
    "kind" : "VarDef",
    "location" : [ 3, 1, 3, 14 ],
    "var" : {
      "kind" : "TypedVar",
      "location" : [ 3, 1, 3, 6 ],
      "identifier" : {
        "kind" : "Identifier",
        "location" : [ 3, 1, 3, 1 ],
        "name" : "z"
      },
      "type" : {
        "kind" : "ClassType",
        "location" : [ 3, 3, 3, 6 ],
        "className" : "bool"
      }
    },
    "value" : {
      "kind" : "BooleanLiteral",
      "location" : [ 3, 10, 3, 14 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "bool"
      },
      "value" : false
    }
  } ],
  "statements" : [ {
    "kind" : "AssignStmt",
    "location" : [ 5, 1, 5, 9 ],
    "errorMsg" : "Expected type `bool`; got type `int`",
    "targets" : [ {
      "kind" : "Identifier",
      "location" : [ 5, 1, 5, 1 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "name" : "x"
    }, {
      "kind" : "Identifier",
      "location" : [ 5, 5, 5, 5 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "bool"
      },
      "name" : "z"
    } ],
    "value" : {
      "kind" : "IntegerLiteral",
      "location" : [ 5, 9, 5, 9 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "value" : 1
    }
  }, {
    "kind" : "AssignStmt",
    "location" : [ 6, 1, 6, 12 ],
    "errorMsg" : "Expected type `int`; got type `<None>`",
    "targets" : [ {
      "kind" : "Identifier",
      "location" : [ 6, 1, 6, 1 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "name" : "x"
    }, {
      "kind" : "Identifier",
      "location" : [ 6, 5, 6, 5 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "name" : "y"
    } ],
    "value" : {
      "kind" : "NoneLiteral",
      "location" : [ 6, 9, 6, 12 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "<None>"
      }
    }
  }, {
    "kind" : "AssignStmt",
    "location" : [ 7, 1, 7, 10 ],
    "errorMsg" : "Expected type `int`; got type `<Empty>`",
    "targets" : [ {
      "kind" : "Identifier",
      "location" : [ 7, 1, 7, 1 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "name" : "x"
    }, {
      "kind" : "Identifier",
      "location" : [ 7, 5, 7, 5 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "name" : "y"
    } ],
    "value" : {
      "kind" : "ListExpr",
      "location" : [ 7, 9, 7, 10 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "<Empty>"
      },
      "elements" : [ ]
    }
  }, {
    "kind" : "AssignStmt",
    "location" : [ 8, 1, 8, 12 ],
    "errorMsg" : "Expected type `int`; got type `<None>`",
    "targets" : [ {
      "kind" : "Identifier",
      "location" : [ 8, 1, 8, 1 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "name" : "x"
    }, {
      "kind" : "Identifier",
      "location" : [ 8, 5, 8, 5 ],
      "errorMsg" : "Not a variable: a",
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "object"
      },
      "name" : "a"
    } ],
    "value" : {
      "kind" : "NoneLiteral",
      "location" : [ 8, 9, 8, 12 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "<None>"
      }
    }
  }, {
    "kind" : "AssignStmt",
    "location" : [ 9, 1, 9, 10 ],
    "errorMsg" : "Expected type `int`; got type `<Empty>`",
    "targets" : [ {
      "kind" : "Identifier",
      "location" : [ 9, 1, 9, 1 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "name" : "x"
    }, {
      "kind" : "Identifier",
      "location" : [ 9, 5, 9, 5 ],
      "errorMsg" : "Not a variable: a",
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "object"
      },
      "name" : "a"
    } ],
    "value" : {
      "kind" : "ListExpr",
      "location" : [ 9, 9, 9, 10 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "<Empty>"
      },
      "elements" : [ ]
    }
  }, {
    "kind" : "AssignStmt",
    "location" : [ 10, 1, 10, 12 ],
    "errorMsg" : "Expected type `int`; got type `bool`",
    "targets" : [ {
      "kind" : "Identifier",
      "location" : [ 10, 1, 10, 1 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "name" : "x"
    }, {
      "kind" : "Identifier",
      "location" : [ 10, 5, 10, 5 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "int"
      },
      "name" : "y"
    } ],
    "value" : {
      "kind" : "BooleanLiteral",
      "location" : [ 10, 9, 10, 12 ],
      "inferredType" : {
        "kind" : "ClassValueType",
        "className" : "bool"
      },
      "value" : true
    }
  } ],
  "errors" : {
    "errors" : [ {
      "kind" : "CompilerError",
      "location" : [ 5, 1, 5, 9 ],
      "message" : "Expected type `bool`; got type `int`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 6, 1, 6, 12 ],
      "message" : "Expected type `int`; got type `<None>`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 7, 1, 7, 10 ],
      "message" : "Expected type `int`; got type `<Empty>`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 8, 1, 8, 12 ],
      "message" : "Expected type `int`; got type `<None>`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 8, 5, 8, 5 ],
      "message" : "Not a variable: a"
    }, {
      "kind" : "CompilerError",
      "location" : [ 9, 1, 9, 10 ],
      "message" : "Expected type `int`; got type `<Empty>`"
    }, {
      "kind" : "CompilerError",
      "location" : [ 9, 5, 9, 5 ],
      "message" : "Not a variable: a"
    }, {
      "kind" : "CompilerError",
      "location" : [ 10, 1, 10, 12 ],
      "message" : "Expected type `int`; got type `bool`"
    } ],
    "kind" : "Errors",
    "location" : [ 0, 0, 0, 0 ]
  }
}